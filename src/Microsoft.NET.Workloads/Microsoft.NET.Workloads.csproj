<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information. -->
<Project Sdk="Microsoft.Build.NoTargets">

  <PropertyGroup>
    <TargetFramework>$(SdkTargetFramework)</TargetFramework>
    <!-- Allows the pack target to run on this project. -->
    <IsPackable>true</IsPackable>
    <!-- Runs pack when building. -->
    <!-- See: https://learn.microsoft.com/en-us/nuget/quickstart/create-and-publish-a-package-using-the-dotnet-cli#automatically-generate-package-on-build -->
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <!-- Disables NU5128 error when creating a package with no assemblies. -->
    <!-- See: https://learn.microsoft.com/en-us/nuget/reference/errors-and-warnings/nu5128#solution-1 -->
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
    <!-- <PowerShellFile>powershell -NonInteractive -NoLogo -NoProfile -ExecutionPolicy Unrestricted -File</PowerShellFile> -->
    <PackageId>$(MSBuildProjectName).$(SDKFeatureBand)</PackageId>
    <!-- Adds a README.md to the NuGet package. -->
    <!-- See: https://devblogs.microsoft.com/nuget/add-a-readme-to-your-nuget-package/ -->
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="$(OutputPath)workloadset.json" Pack="true" PackagePath="data" />
    <None Include="README.md" Pack="true" PackagePath="\"/>
    <ItemsToSign Include="$(PackageId).nupkg" />
  </ItemGroup>

  <Import Project="workloads.props" />

  <Target Name="CreateWorkloadSetJson" BeforeTargets="Build">
    <PropertyGroup>
      <!-- %20 is the space character in ASCII for indentation. MSBuild normally doesn't allow leading whitespace. -->
      <!-- ',;' is used so each workload is treated as a new line via semi-colon and has the appropriate commas for JSON properties. -->
      <WorkloadsJson>@(WorkloadManifest->'%20%20&quot;%(Identity)&quot;: &quot;%(Version)/%(FeatureBand)&quot;', ',;')</WorkloadsJson>
    </PropertyGroup>
    <WriteLinesToFile File="$(OutputPath)workloadset.json" Lines="{;$(WorkloadsJson);}" Overwrite="true" />
  </Target>

</Project>
